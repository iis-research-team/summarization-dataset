В настоящее время российская система высшего образования переживает коренные изменения в организационной структуре, методах оценки знаний и методологиях обучения. Данные изменения обусловлены глобализацией образования и требованиями современного бизнеса и производства. В последние годы гармонизация национальной образовательной системы, по крайней мере, с образовательными стандартами европейского сообщества очень актуальна. Заметим, что процесс модернизации образовательных систем в рамках Болонского и Копенгагенского процессов стал выходить за рамки европейского сообщества, охватывая все большее количество стран различных регионов мира.
Таким образом, гармонизация образовательных стандартов выдвигает перед всеми ведущими мировыми державами такие цели в области реформации высшего профессионального образования, как создание четких и единых квалификаций, переход на двухуровневую систему подготовки, введение системы кредитов, обеспечение академической мобильности студентов и преподавателей, международное сотрудничество в обеспечении качества высшего образования, образование в течение всей жизни (LLL – Lifelong learning) и др. Немаловажным, говоря языком бизнеса, является ориентация на потребителя, т.е. в нашем случае установка студента в центр образовательного процесса. На сегодняшний день множество российских высших учебных заведений находятся в процессе перехода к вышеназванным принципам построения процесса обучения и организации работы вуза, но они сталкиваются с множеством проблем. В том числе, c одной из самых трудоемких – полностью управляемый студентом план обучения, который требует тесного взаимодействия студентов, преподавателей курсов, составителей расписания, деканата, учебного управления и других структур учебного заведения. Очевидно, что необходимо внедрение информационной системы, позволяющей управлять процессом обучения и контролировать его на всех этапах.
При проектировании данной информационной системы был сделан упор на введении принципиально нового системного подхода в организации образовательного процесса и сопутствующих ему управляющих процессов. Особенностью данного подхода является акцентирование внимания на индивидуализацию образовательных траекторий студентов, поддержку современных образовательных концепций (таких, как CDIO и PBL) и обеспечение предельно дружественных в использовании компьютерных технологий для выполнения всех видов организационной деятельности. Кроме того, отдельное внимание при планировании было уделено социальным элементам системы.

1. Возможности системы

Прежде всего, проектируемая система является хранилищем данных обо всех аспектах учебной и организационной деятельности в вузе. После проведения анализа работы типового университета были выделены следующие основные сущности: учетные записи студентов, преподавателей и других сотрудников, аудиторный фонд, набор дисциплин и привязанных к ним материалов, учебные планы (как базовые, так и индивидуальные), структура подразделений, условия составления расписания, индивидуальные расписания и некоторые другие вплоть до данных мониторинга текущей успеваемости.
Очевидно, система должна предоставлять отдельный набор операций в зависимости от роли вошедшего пользователя. Поэтому была имплементирована служба ролей с разграничением доступа к функциям системы. Данная служба позволяет пользователю иметь несколько ролей, что необходимо для внедрения в реальном учебном заведении, так как зачастую один и тот же сотрудник исполняет несколько обязанностей из различных ролей.
Каждая роль имеет свой фронт-энд для удобного доступа ко всем разрешенным функциям через веб-интерфейс. На первом этапе развития системы было принято решение сделать четыре типа фронт-энда: для студента, для преподавателя, для администратора учебного заведения или его подразделения и для свободного просмотра (гостя). В дальнейшем планируется добавить различные фронт-энды для других подразделений и сотрудников, например для ректора, работника деканата, заведующего корпусом и т.д.
Фронт-энд студента привязан к аккаунту студента, который создается и заполняется на этапе его поступления в учебное заведение (или при внедрении системы, в случае, если студент уже находится на обучении), после чего студенту выдаются данные для доступа. Студенту доступны следующие основные функции: редактирование и просмотр личных данных, запись на курсы, отслеживание соответствия индивидуального учебного плана обязательной образовательной программе и подсчет кредитов, просмотр индивидуального расписания, просмотр материалов по выбранным курсам, оценка курсов и преподавателей, просмотр текущей успеваемости и заданий, связь с преподавателем.
Фронт-энд преподавателя также привязан к аккаунту преподавателя, который создается или при вступлении в должность, или при внедрении системы для уже работающих преподавателей. Было принято решение включить в систему возможность преподавателю заявлять пожелания и требования к составлению расписания и записи на его курсы.
Получив доступ к аккаунту, преподаватель может добавить в систему свои курсы (или отметить себя преподавателем уже существующего в системе курса), добавить описание, рабочую программу, список занятий, учебно-методические материалы и др. Затем он должен определить ограничения для записи на курс. Такими ограничениями могут быть: максимальное количество слушателей, необходимый набор уже пройденных студентом предметов, институт, к которому должен относиться слушатель, и т.п. Кроме того, преподаватель может предъявить требования к аудиториям, в которых будут проходить занятия: наличие экрана с проектором, аудиосистемы, компьютеров для каждого студента, специального лабораторного оборудования, размещение аудитории в конкретном корпусе (корпусах) и т.п. Преподавателю доступны следующие основные функции: редактирование и просмотр личных данных, создание курсов и открытие их для записи студентов, просмотр личного расписания, просмотр списка студентов на курсах, публикация материалов по своим курсам, публикация заданий для самостоятельного выполнения студентами, ведение текущего контроля успеваемости и посещения занятий, связь со студентами (как массовая рассылка, так и индивидуальная).
Администраторы подразделений авторизуются в системе под одноименным фронт-эндом. Основная цель этих пользователей – ввод данных об аудиториях, преподавателях, студентах и т.д. На более поздних этапах разработки данной системы будут добавлены специальные роли для данных задач, такие, как отдел кадров или приемная комиссия. Они примут на себя обязанности по управлению всеми статическими данными (корпуса, аудитории, персонала и т.д.), возлагаемые на этапе внедрения системы на администраторов подразделений.
Также можно выделить отдельно роль и соответствующий фронт-энд технического администратора системы. В нем реализуется различный функционал по контролю работоспособности всех уровней системы, её обслуживанию: проверка базы данных на ошибки, редактирование прав доступа, контроль различных технических характеристик (нагрузка системы, сообщения об ошибках) и т.д. Кроме того, технический администратор осуществляет запуск различных ресурсоемких процедур, таких, как составление общего расписания или подсчета статистики.
Общий фронт-энд предназначен только для просмотра общедоступной информации. Одним из сценариев его применения является предоставление информации о студенте работодателю. Данный функционал присутствует во многих системах профессиональной сертификации, например в сертификационном центре Microsoft. Работодатель может по коду, предоставленному выпускником этого учебного заведения, получить информацию о пройденных курсах, их содержании и успеваемости студента.
Помимо доступа к функциям разрабатываемой информационной системы посредством веб-браузера планируется имплементировать Web API (англ. Web Application Programming Interface – сетевой интерфейс программирования приложений) для решения проблемы доступа к данным и функциям системы с использованием других программ. Данный Web API впоследствии будет использоваться при реализации приложений для мобильных устройств и нативных приложений для различных операционных систем. Такой дополнительный метод взаимодействия с системой, при наличии документации для API в свободном доступе, позволит разработчикам сторонних приложений расширять систему, создавать различные виджеты и т.д.
Важной функцией рассматриваемой информационной системы является непосредственно генерация учебного расписания, удовлетворяющего всему множеству заданных ранее условий. Эта задача является наиболее нетривиальной и ресурсоемкой в рамках разрабатываемой системы, так как является NP-полной и в сравнении с распространенными системами генерации расписаний, работающими с небольшим набором групп (классов) и, в большинстве случаев, не берущими в расчет никаких дополнительных условий – данная информационная система работает с большѝм количеством индивидуальных планов студентов и учитывает различные условия, предъявленные преподавателями при объявлении курсов.
По причине высокой ресурсоемкости было принято решение выделить в сетевой архитектуре системы отдельный вычислительный кластер для задач генерации расписания. Данное решение принято для разгрузки центрального сервера системы, так как он отвечает за взаимодействие с пользователями и может существенно снизить время ответа при генерации расписания на том же сервере. Генерация расписания является полностью автономной задачей и не требует вмешательств в процессе выполнения. Таким образом, эта задача является идеальной для выполнения одним из сервисов облачных вычислений. В настоящий момент выбор в пользу сервисов облачных вычислений оправдан как экономически, так и удобством внедрения и обслуживания. Отсутствие необходимости закупки серверного оборудования, аренды помещения, обеспечения сохранности данных и т.д. делает облачные сервисы наилучшим инструментом для выполнения удаленных вычислений.
В общем случае генерация расписания происходит несколько раз в учебный год. Генерация инициируется администратором системы после проверки наличия всех необходимых компонентов: индивидуальных учебных планов, дисциплин, различных условий генерации и описания аудиторного фонда. В случае, если студент не предоставил индивидуальный учебный план, применяется базовый план для его специальности.
Хранилище данных накапливает данные по дисциплинам, индивидуальным учебным планам и расписаниям. После окончания учебного года, а порой и семестра, данная информация становится неактуальной, но не может быть удалена, так как может понадобиться для статистических или других целей. В данный момент в большинстве высших учебных заведениях такая информация наполняет бумажные архивы в худшем случае и неструктурированные электронные хранилища – в лучшем. Оставлять устаревшие данные в основной базе данных системы тоже является не лучшим решением, так как при малой полезности эти данные замедляют скорость запросов с каждым годом все больше и больше. По этой причине было принято решение выделить в сетевой архитектуре системы отдельное хранилище данных, которое не должно обеспечивать оперативный доступ к данным. Таким образом, будет снижена нагрузка на основную БД и произведена кластеризация данных по признаку их текущей полезности.

2. Сетевая архитектура системы

Базируясь на заявленном ранее функционале системы, была разработана следующая сетевая архитектура информационной системы (рис. 1). Основой архитектуры являются облачные веб-приложения и хранилище данных. Основное веб-приложение выполняет важнейшую функцию распределения прав, предоставления и обработки данных. Хранилище данных не имеет средств разграничения доступа, поэтому вся работа с ним происходит только через вебприложение. На схеме база данных обозначена как сетевая единица, но при необходимости может быть масштабирована путем внедрения системы репликации без модификации других частей системы.
На левой половине схемы изображены возможные варианты клиентского доступа к системе: мобильные и обычные веб-клиенты (доступ посредством браузера к соответствующей версии веб-сайта), нативные программы для мобильных устройств и различных операционных систем (доступ посредством Web API). Все варианты доступа реализуются через единые механизмы основного веб-приложения для обеспечения идентичного поведения различных подсистем.
Особое внимание в сетевой архитектуре было уделено возможности масштабирования абсолютно всех частей системы, что позволяет реализовать данную систему как сервис облачных вычислений для предоставления клиентам. Являясь одним из популярнейших трендов на сегодняшний день – облачные сервисы являются наилучшим способом предоставления ПО сторонним компаниям (в нашем случае высшим учебным заведениям). Решение предоставлять систему по модели SaaS (Software as a Service, программное обеспечение как услуга) значительно уменьшает затраты на внедрение, полностью исключает затраты на серверное оборудование и построение инфраструктуры для каждого клиента, избавляет от проблемы обновления программного обеспечения каждому клиенту, позволяет имплементировать единые системы резервного копирования и т.д.

3. Внедрение и работа с системой

При заключении соглашения с высшим учебным заведением о внедрении данной информационной системы создается профиль университета в хранилище данных и добавляются основные администраторы (ответственные за сопровождение системы в учебном заведении). Дальнейшая работа по сопровождению делегируется службе информатизации вуза. Следующим этапом является внесение в хранилище данных – аудиторий, студентов, преподавателей, и т.д. На этом, благодаря использованию системы как облачного сервиса внедрение непосредственно программного комплекса заканчивается.
Затем происходит публикация дисциплин, их описаний, материалов, требований преподавателями. После этого студенты выбирают дисциплины для изучения из списков доступных и составляют индивидуальный учебный план на ближайший семестр. Каждый учебный план проверяется на соответствие всем нормам и требованиям как учебного заведения, так и Федеральным государственным образовательным стандартам.
С использованием собранных данных составляется индивидуальное расписание для каждого студента и преподавателя, удовлетворяющее всем поставленным строгим требованиям и максимально подходящее под все нестрогие. Алгоритмически модуль генерации расписания основан на комплексном использовании эволюционных вычислений и метода штрафов. Данная комбинация позволяет включать дополнительные условия в процесс генерации и уменьшить время генерации расписания по сравнению с использованием этих методов отдельно или применения некоторых других методик. Процедура составления расписания может проводиться несколько раз с параллельным изменением настроек или требований к расписанию, пока не будет получен оптимальный результат. В качестве объективного критерия оптимальности принимается минимальное отклонение от функции штрафов, задаваемой массивом требований к расписанию с различными значениями приоритета. Кроме того, возможна (субъективная) ручная оценка отдельных срезов расписания и последующая корректировка.

Заключение

Следует отметить, что подобные системы существуют, но в основном внедрены за рубежом, например TechAct University Management System или AccelUMS.
Использование этих систем в российских учебных учреждениях невозможно, так как они не учитывают особенностей переходного состояния нашей системы образования и имеют жесткую привязку к зарубежным стандартам делопроизводства и организации образовательного процесса.
Представленная в данной статье информационная система позиционируется для последующего внедрения в крупные высшие учебные заведения России, в частности в национальные исследовательские университеты.