Введение

Автоматизация процесса проведения медицинских исследований и манипуляций неразделимо связана с процессами сбора и обработки данных, которые позволяют как облегчить рутинные операции, проводимые медицинским персоналом, так и повысить качество предоставляемой услуги путем объективизации результатов, увеличения скорости, эффективности их выполнения и обеспечения удобства пациента. Трудность развития направления связана с тем, что разметка и аннотация полученных данных требуют наличия экспертных компетенций в интерпретации биологических сигналов и знания физиологических особенностей пациентов с той или иной патологией.
Создание новой медицинской технологии включает разработку аппаратной, программной и методической составляющих, при этом разработка программного компонента зависит от их реализации.
Такая ситуация порождает проблему организации процесса разработки алгоритмов анализа данных тогда, когда необходимо реализовать не только итоговый программный продукт, но и промежуточные варианты, используемые для разных версий устройств и методических подходов. Зачастую в процессе разработки необходимо проводить множество экспериментов по сбору данных от устройств с различными схемами функционирования и расстановки датчиков, видеофиксацией и ведением журнала действий участников. Универсальных систем сопровождения таких процессов существовать не может, так как присутствуют особенности предметной области, конкретной методики проведения операций, используемых протоколов передачи данных от устройств, а также конечных задач.
Для соответствия концепции открытых исследований, воспроизводимости, доступности и повышения качества их результатов экспериментальные данные должны быть предоставлены в общий доступ. Можно отметить, что аннотация медицинских биологических сигналов – это трудоемкий процесс, требующий компетенций в выбранной предметной области, поэтому при публикации важным ресурсом являются как сами исходные сигналы, так и их аннотация. Последнее часто отсутствует в медицинских наборах данных. Кроме этого, репозитории с ними имеют свои соглашения по структуре и именованию файлов, которые исследователь должен заранее учесть, чтобы обеспечить полноту данных и их выгрузку без дополнительной подготовки. Поэтому важной задачей при разработке новых медицинских технологий является не только сбор исходных биологических сигналов, но и накопление аннотационных данных, которые включают информацию об объекте исследования, плане эксперимента, проведенной разметке и результатах анализа. Для обеспечения корректного выполнения эксперимента необходимо предоставить приложения, обеспечивающие сопровождение каждой фазы эксперимента, с детальными инструкциями.
В работе предложен вариант архитектуры автоматизированной системы планирования и проведения экспериментов для сбора и анализа данных, соответствующей решению прикладной задачи – разработке роботизированного комплекса для восстановления утраченной функции конечности. Разработка систем управления сбором и анализом экспериментальных данных является одним из механизмов обеспечения доступности, совместимости и возможности повторного использования полученных данных. Наиболее часто встречаемые направления работ в этой области – сопровождение физических экспериментов и регистрация событий от пользователей. Фокус в работах часто смещен на разработку аппаратных модулей и модулей управления экспериментальными установками.
Например, в работе рассматривается разработка систем для сбора данных экспериментов в аэродинамических трубах на основе архитектуры систем управления технологическим процессом. Работа является примером конструирования более гибкой системы с архитектурой MVC (Model-View-Conrtoller), где в качестве модели выступают модули захвата данных устройств через аналого-цифровой преобразователь, а в виде контроллера рассматриваются механизмы миграции этих данных в базу данных (БД) и файловую систему. Общее число работ, посвященных автоматизации сбора экспериментальных данных, ограничено.
В настоящее время на рассмотрение и одобрение сообществом вносятся предложения по стандартизации сбора данных в области нейробиологии и биомедицины. Международный координационный центр нейроинформатики одобрил принципы FAIR (Findable, Accessible, Interoperable and Reusable), которые направлены на повышение возможности повторного использования данных и расширение автоматического поиска.
В работе предложена открытая веб-система для клинических и электрофизиологических экспериментов, являющаяся примером систем, поддерживающих принципы FAIR. Система оснащена модулями, позволяющими с использованием поддерживаемых протоколов собирать данные экспериментов, включая биологические сигналы и время отклика. Планирование эксперимента в системе связано с составлением его плана (характеристики экспериментальной группы, конфигурация оборудования и т.д.) и протокола (инструкций). Другие примеры такого типа систем представлены в обзоре.
Несмотря на то, что описанные принципы позволяют определять инструменты для сбора и унификации медицинских данных, задаче сбора данных при разработке медицинских аппаратно-программных комплексов не уделено должного внимания. Особенность такого типа систем в том, что они должны обеспечивать планирование, проведение и анализ формализованных экспериментов. Поэтому в рамках настоящей работы рассмотрена архитектура автоматизированной системы планирования и проведения экспериментов для сопровождения разработки аппаратно-программного комплекса c возможностью выгрузки полученных данных в репозитории, поддерживающие принципы FAIR.

1. Предметная область системы

Разработка системы планирования и проведения экспериментов является одним из этапов создания роботизированного комплекса для восстановления утраченной функции конечности человека (например, после перенесенного инсульта). Комплекс включает в себя два типа аппаратных устройств, управляемых общим программным обеспечением. Копирующее устройство позволяет получить и записать информацию о перемещении конечности врача-реабилитолога или пациента. Исполняющее устройство осуществляет перемещение конечности пациента, аналогичное перемещению конечности врача, либо в соответствии с заранее заданной программой реабилитационных упражнений.
Программное обеспечение осуществляет формирование управляющих команд, позволяющих пациенту выполнить программу реабилитации с участием врача-реабилитолога или без него. Использование пациентом копирующего устройства дает возможность провести оценку состояния его конечности в балльной системе согласно функциональной шкале Фугл-Мейера. Для анализа используется информация о пространственной конфигурации конечности (углы поворота узлов относительно друг друга, полная кинематическая схема), а также электромиограммы, полученные с поверхности задействованных при движениях мышц.
Система планирования и проведения эксперимента должна предоставлять возможность создания четко структурированных наборов, полученных при проведении формализованных действий пациента и сопровождаемых подробной экспертной аннотацией, включающей описание периодов возникновения составных действий, балл оценки по функциональной шкале и т.д. Помимо этого, система должна предоставлять возможность планирования и проведения экспериментальных исследований, позволяющих оценить эффективность версий исполнения применяемых в эксперименте аппаратных и программных средств, а также методик работы с роботизированным комплексом.
В плане эксперимента могут быть отражены типы, количество и способы расстановки датчиков, действия, проводимые при подготовке к проведению эксперимента, и другая значимая информация. Также для возможности повторной экспертной оценки проведенных в процессе эксперимента действий необходимо предусмотреть видеофиксацию его хода.

2. Архитектура системы

Архитектура предлагаемой системы включает в себя компоненты и сущности в модели данных, которые можно разделить на элементы, соответствующие предметной области, базовые элементы, которые не зависят от предметной области, а также динамически определяемые в зависимости от эксперимента компоненты. С использованием базовых элементов, определенных в системе, может производиться ее доработка на уровне кода для другой предметной области. Для части компонентов предполагается использование MVVM-архитектуры (Model-View-ViewModel), обеспечивающей связывание пользовательского интерфейса и модели данных через модель представления с обменом изменений данных в обе стороны.
В системе определены две роли пользователей: экспериментатор и исследователь. Исследователь может как формировать план эксперимента, так и проводить тестирование новых алгоритмов, аннотацию данных с использованием полученных результатов. Для каждой из ролей определены свои компоненты. Система состоит из четырех компонент: программного обеспечения (ПО) исследователя, ПО эксперимента, ПО управления и ПО аналитика.
Центральным управляющим компонентом является ПО исследователя, функциональное назначение которого – управлять файловым хранилищем и базой наборов данных, протоколов и результатов экспериментов. Также этот компонент позволяет разрабатывать протоколы экспериментов, загружать в репозиторий результаты их проведения, производить поиск и сортировку по имеющимся наборам данных.
После разработки протокола эксперимента ПО исследователя позволяет выгрузить пакет протокола эксперимента на промежуточный файловый сервер или накопитель (рис. 1). Пакет протокола эксперимента может быть загружен в ПО эксперимента, которое используется для непосредственного проведения эксперимента. Особенность ПО эксперимента в том, что его задача состоит в выводе инструкции и управляющей информации, а сбор экспериментальных данных происходит в ПО управления.
ПО управления – это программный компонент, обеспечивающий сбор и обработку данных для определенного эксперимента. Компонент может дополняться и обновляться разработчиком. То есть ПО управления разрабатывается для работы с определенными устройствами и алгоритмами обработки данных и определяется на этапе планирования эксперимента.
ПО эксперимента в зависимости от типа эксперимента запускает необходимую версию ПО управления и управляет им посредством клиент-серверного взаимодействия по протоколу TCP (см. рис. 1).
Первично ПО эксперимента проводит запуск серверного процесса ПО управления с передачей аргумента командной строки для указания директории сохранения файлов и выполняет подключение к серверному сокету. Далее по протоколу эксперимента выполняется последовательность запросов к ПО управления: диагностика и калибровка устройств, запуск этапа эксперимента с передачей пути до файла конфигурации этапа, получение информационной строки текущего состояния проведения этапа, остановка этапа эксперимента и остановка процесса ПО управления. Серверная часть обработки запросов упакована в библиотеку и может быть использована для любой версии ПО управления. В результате проведения эксперимента формируются файлы с сигналами и дополнительной информацией для каждого этапа эксперимента. Они сохраняются в файловой структуре, удовлетворяющей требованиям медицинского репозитория Physionet. Полученные данные формируют пакет проведенного эксперимента и также через файловый сервер или накопитель выгружаются в ПО исследователя. Файловая структура пакетов протокола эксперимента и проведенного эксперимента представлена на рис. 2. При выгрузке полученного пакета проведенного эксперимента в ПО исследователя данные перемещаются в файловое хранилище, а также частично выгружаются в БД. Для унификации структуры БД предполагается использование единой модели данных (рис. 3) для ПО исследователя и ПО эксперимента, где ПО исследователя взаимодействует с серверной БД, а при формировании пакета протокола эксперимента присоединяет к нему ее частичную файловую копию. ПО эксперимента взаимодействует с файловой версией БД, которая обновляется в процессе выгрузки пакета протокола эксперимента.
Исследователь в ПО исследователя может проводить поиск необходимых данных и запускать ПО аналитика на выбранном наборе приложение для тестирования алгоритмов и разметки сигналов. ПО аналитика, как и ПО управления, также обновляется в процессе разработки продукта.

3. Техническая реализация

В качестве фреймворка для программных компонент, определенных статически (ПО исследователя и ПО эксперимента), выбран Uno Platform, позволяющий создавать приложения для операционных систем Windows, Linux, MacOS, мобильных платформ и веб-сборок. Для связывания модели данных и пользовательского интерфейса применялись механизмы биндинга платформы .Net.
Для реализации взаимодействия с серверной и файловой БД была использована библиотека Entity Framework Core. Такой подход реализует MVVM-архитектуру и позволяет быстро адаптировать систему под другую предметную область. Для реализации серверной БД используется система управления базами данных PostgreSQL, для частичных локальных файловых копий БД – SQLite с пакетом шифрования данных.
Для создания вариантов ПО управления и ПО аналитика на данный момент разработаны приложения на языке C++ с использованием комплекта сборки MinGW, а также определена библиотека протокола взаимодействия компонент системы. В дальнейшем допускается использование компонент, разработанных с использованием других инструментов и поддерживающих заданный протокол межпроцессорного взаимодействия.

Заключение

Разработка системы, способной формировать данные, структура которых соответствует требованиям FAIR, и обладающей возможностью модификации под схожие прикладные задачи, может предоставить инструмент для сопровождения процесса разработки медицинских программно-аппаратных комплексов и информационных технологий.
Такая система должна состоять из базовых и динамически заменяемых компонентов, для того чтобы предоставлять возможность планирования и проведения экспериментов, не ограничивая исследователей в области применения такого типа систем, в том числе для сопровождения процесса разработки.
В работе представлена архитектура, технические аспекты реализации автоматизированной системы планирования и проведения экспериментов, сбора и анализа данных для сопровождения разработки функционального макета роботизированного комплекса для восстановления утраченной функции конечности. Ее использование позволило автоматизировать организацию сбора, хранения, поиска данных, а также их анализа и аннотации.